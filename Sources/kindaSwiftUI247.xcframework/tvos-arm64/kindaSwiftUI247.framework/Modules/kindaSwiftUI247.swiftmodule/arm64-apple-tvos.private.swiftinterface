// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-tvos16.1 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name kindaSwiftUI247
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
@_exported import kindaSwiftUI247
public struct PoweredByKindaSwiftUIView : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15kindaSwiftUI247014PoweredByKindaB6UIViewV4bodyQrvp", 0) __
}
public struct LicenseKeyStatus {
  public static func isLicenseActive() -> Swift.Bool
}
public struct KindaSwiftUILogManager {
  public static var log: kindaSwiftUI247.KindaSwiftUILog
}
public struct KindaSwiftUILog {
  public var level: kindaSwiftUI247.KindaSwiftUILogLevel
  public var types: [kindaSwiftUI247.KindaSwiftUILogType]
  public init(_ level: kindaSwiftUI247.KindaSwiftUILogLevel = .none, types: [kindaSwiftUI247.KindaSwiftUILogType] = [])
}
public enum KindaSwiftUILogLevel {
  case none, debug, full
  public static func == (a: kindaSwiftUI247.KindaSwiftUILogLevel, b: kindaSwiftUI247.KindaSwiftUILogLevel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum KindaSwiftUILogType : Swift.String, Swift.CaseIterable {
  case navigationRouter
  public init?(rawValue: Swift.String)
  public typealias AllCases = [kindaSwiftUI247.KindaSwiftUILogType]
  public typealias RawValue = Swift.String
  public static var allCases: [kindaSwiftUI247.KindaSwiftUILogType] {
    get
  }
  public var rawValue: Swift.String {
    get
  }
}
@_Concurrency.MainActor(unsafe) public struct KindaSwiftUI247ContentView<Content> : SwiftUI.View where Content : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public init(logLevel: kindaSwiftUI247.KindaSwiftUILogLevel, logTypes: [kindaSwiftUI247.KindaSwiftUILogType] = KindaSwiftUILogType.allCases, @SwiftUI.ViewBuilder content: @escaping () -> Content)
  @_Concurrency.MainActor(unsafe) public init(log: kindaSwiftUI247.KindaSwiftUILog, @SwiftUI.ViewBuilder content: @escaping () -> Content)
  @_Concurrency.MainActor(unsafe) public init(@SwiftUI.ViewBuilder content: @escaping () -> Content)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15kindaSwiftUI24705KindabC11ContentViewV4bodyQrvp", 0) __<Content>
}
extension kindaSwiftUI247.KindaSwiftUILogLevel : Swift.Equatable {}
extension kindaSwiftUI247.KindaSwiftUILogLevel : Swift.Hashable {}
extension kindaSwiftUI247.KindaSwiftUILogType : Swift.Equatable {}
extension kindaSwiftUI247.KindaSwiftUILogType : Swift.Hashable {}
extension kindaSwiftUI247.KindaSwiftUILogType : Swift.RawRepresentable {}
